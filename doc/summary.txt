LOPTI is mathematical optimization  C++ library. There are three major parts.
1st and main part is solver-driver which either wraps external solver or uses
LOPTI native solvers and presents to library user consistent and simple
optimization API.

2nd part is collection of solvers.  Currently 4
solvers are included (or supported):
NEWUOA, CONDOR, Nelder-Mead (simplex) and Hook-Jeevs.
All these solvers are derivative free and have open source (GPL or BSD like)
licences.  Some of them (Condor) are unchanged and treated as black-box.  Some
of them (NEWUOA - fortran source) went through heavy modification to interface
with LOPTI.  And other (Hook-Jeevs) were completely rewritten into LOPTI native
solver.

Though I am primarily interested in derivative-free, unconstrained
solvers for expensive objective, LOPTI inherently not limited to these methods
and in future there might be other types of solvers and constraints interface.
Also I am developing my own solver, preliminary results are
very promising, stay tuned.

3rd part is collection of object function and
object function modifiers.

